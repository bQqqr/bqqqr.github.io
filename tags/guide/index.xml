<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>guide on Christos Kaltsas's Webpage</title><link>https://bqqqr.github.io/tags/guide/</link><description>Recent content in guide on Christos Kaltsas's Webpage</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 08 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://bqqqr.github.io/tags/guide/index.xml" rel="self" type="application/rss+xml"/><item><title>A Guide To MIPS</title><link>https://bqqqr.github.io/posts/guide-to-mips/</link><pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate><guid>https://bqqqr.github.io/posts/guide-to-mips/</guid><description>ðŸ¤– MIPS ðŸ‘œ Registers Integer Ones Symbol Actual Meaning Usage Conventions $zero $0 Constant Value Zero Preserved Across Calls $at $1 Reversed by the Assembler Preserved Across Calls $v0-$v1 $2-3 Expression Eval &amp;amp; Subprogram Return Value Not Preserved Across Calls $a0-$a3 $4-7 Arguments Not Preserved Across Calls $t0-$t7 $8-15 Temporaries Not Preserved Across Calls $s0-$s7 $16-23 Saved Values Preserved Across Calls $t8-$t9 $24-25 Temporaries Not Preserved Across Calls $k0-$k1 $26-27 Kernel (OS) Registers Dangerous to Use $gp $28 Global Pointer Dangerous to Use $sp $29 Stack Pointer Dangerous to Use $fp $30 Frame Pointer Dangerous to Use $ra $31 Return Address Dangerous to Use Simple programs should use the following registers:</description></item></channel></rss>